#!/usr/bin/env bash

set -euo pipefail

script_dir="$(readlink -e "${BASH_SOURCE[0]}")"
script_dir="$(dirname "$script_dir")"
common_sh_path="$(readlink -e "$script_dir/../bin/common.sh")"
. "$common_sh_path"
unset common_sh_path

PROGRAM_NAME=install

function print_usage ()
{
  cat <<'EOF'
Usage: install [OPTION]...
Install libbacktrace.

  --prefix=<DIR>             Pass `--prefix=<DIR>' on to libbacktrace
                             `configure' script.
  --source-dir=<DIR>         The source directory (default: a temporary
                             directory that will be deleted when this script
                             exits).
  --clobber-source-dir       Delete the source directory before the source
                             archive is expanded there.
  -h, --help                 Display this help and exit.
EOF
}

if getopt -T; (( $? != 4 )); then
  die_with_runtime_error "$PROGRAM_NAME" "\`getopt' is not an enhanced version."
fi
opts="$(getopt -n "$PROGRAM_NAME" -l prefix:,source-dir:,clobber-source-dir,help -- h "$@")"
eval set -- "$opts"

expect_rest_args=no
while (( $# > 0 )); do
  arg="$1"
  shift
  if [[ $expect_rest_args == yes ]]; then
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
  fi
  case "$arg" in
  --prefix)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    prefix="$1"
    shift
    ;;
  --source-dir)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    source_dir="$1"
    shift
    ;;
  --clobber-source-dir)
    clobber_source_dir=yes
    ;;
  -h|--help)
    set +x
    print_usage
    exit 0
    ;;
  --)
    expect_rest_args=yes
    ;;
  *)
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
    ;;
  esac
done
unset expect_rest_args

configure_options=()

if [[ ${prefix+DEFINED} == DEFINED ]]; then
  configure_options+=("--prefix=$prefix")
fi

temp_dir="$(mktemp -d)" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create a temporary directory."
push_rollback_command "rm -rf \"$temp_dir\""

: "${source_dir=$temp_dir/src}"
if [[ -z $source_dir ]]; then
  die_with_user_error "$PROGRAM_NAME" "An invalid value \`$source_dir' for \`--source-dir' option."
fi
if [[ $(readlink -m "$source_dir") != $(cd "$temp_dir" >/dev/null && readlink -m "$source_dir") ]]; then
  die_with_user_error "$PROGRAM_NAME" "A relative path \`$source_dir' for \`--source-dir' option, but is expected to be an absolute one."
fi

: "${clobber_source_dir=no}"

if [[ -e $source_dir ]]; then
  case "$clobber_source_dir" in
  yes)
    rm -rf "$source_dir"
    ;;
  no)
    die_with_user_error "$PROGRAM_NAME" "Could not overwrite \`$source_dir'. Use \`--clobber-source-dir' to overwrite it."
    ;;
  *)
    die_with_logic_error "$PROGRAM_NAME"
    ;;
  esac
fi

source_dir_prefix="$(dirname "$source_dir")"
source_dir_basename="$(basename "$source_dir")"
mkdir -p "$source_dir_prefix" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create \`$source_dir_prefix' directory, which is necessary to create the source directory \`$source_dir'."
(cd "$source_dir_prefix" && git clone 'https://github.com/ianlancetaylor/libbacktrace.git' "$source_dir_basename") \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`git clone' libbacktrace repository."

build_dir="$temp_dir/build"
mkdir -p "$build_dir"

(cd "$build_dir" && "$source_dir/configure" --with-pic "${configure_options[@]}") \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`configure' libbacktrace."

(cd "$build_dir" && make -j $(nproc) ) \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`make' libbacktrace."

(cd "$build_dir" && make check) \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`make check' libbacktrace."

(cd "$build_dir" && make install) \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to \`make install' libbacktrace."
